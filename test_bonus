#include <stdio.h>
#include "main.h"

/**
* main - Tests bonus pour _printf
*
* Return: Always 0
*/

int main(void)
{
	int len;

	printf("\n========== TESTS BONUS _PRINTF ==========\n\n");

	/* Test Bonus 1 : Caractère de contrôle (bell) */
	len = _printf("Caractère de contrôle : [%c]\n", 7);
	printf("Test Bonus 1 : Caractère \a => Longueur : %d\n\n", len);

	/* Test Bonus 2 : Tabulations et retours à la ligne */
	len = _printf("Texte formaté : Ligne 1\tLigne 2\nNouvelle ligne\n");
	printf("Test Bonus 2 : Tab/retour ligne => Longueur : %d\n\n", len);

	/* Test Bonus 3 : %% en début et fin */
	len = _printf("%% début et fin %%\n");
	printf("Test Bonus 3 : %% aux extrémités => Longueur : %d\n\n", len);

	/* Test Bonus 4 : Chaîne très longue */
	len = _printf("Longue chaîne : %s\n", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
	printf("Test Bonus 4 : Chaîne longue => Longueur : %d\n\n", len);

	/* Test Bonus 5 : Appels consécutifs */
	_printf("Appel 1\n");
	_printf("Appel 2\n");
	_printf("Appel 3\n");
	printf("Test Bonus 5 : Appels successifs => Vérifier affichage manuel\n\n");

	/* Test Bonus 6 : Plusieurs types côte à côte */
	len = _printf("Mix : %c%c%c %s %c\n", 'A', 'B', 'C', "OK", 'Z');
	printf("Test Bonus 6 : Types proches => Longueur : %d\n\n", len);

	/* Test Bonus 7 : Mélange valide/invalide */
	len = _printf("Mix partiel : %s %k %c %d %y\n", "bonjour", 'X', 123);
	printf("Test Bonus 7 : Valides + non gérés => Longueur : %d\n\n", len);

	/* Test Bonus 8 : % suivi d’un espace */
	len = _printf("Espace après pourcentage : % \n");
	printf("Test Bonus 8 : %% suivi d’espace => Longueur : %d\n\n", len);

	/* Test Bonus 9 : Phrase incomplète avec % final */
	len = _printf("Phrase incomplète et seul %%");
	printf("Test Bonus 9 : %% final sans retour => Longueur : %d\n\n", len);

	/* Test Bonus 10 : NULL au milieu */
	len = _printf("Début [%s] fin\n", NULL);
	printf("Test Bonus 10 : NULL au milieu => Longueur : %d\n\n", len);

	printf("========== FIN TESTS BONUS ==========\n\n");
	return (0);
}
